{"version":3,"sources":["components/Nav/Nav.js","components/Auth/Register.js","constants/constants.js","components/Auth/Login.js","components/Home/Home.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Restaurants/Restaurants.js","containers/MyHomeContainer/MyHomeContainer.js","config/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","logout","currentUser","to","className","style","cursor","onClick","Register","handleChange","handleSubmit","formInfo","name","type","onChange","value","username","email","password","password2","API_URL","Login","state","event","setState","target","preventDefault","userInfo","axios","post","withCredentials","then","response","props","setCurrentUser","data","id","history","push","catch","error","console","log","this","Component","Home","registerUser","newUser","src","alt","login","Post","deletePost","restaurantName","image","time","description","slug","user","profile_image","_id","Date","toLocaleDateString","Posts","displayPosts","posts","map","i","key","restaurant_name","time_posted","restaurant_slug","user_id","Restaurants","restaurant","shouldDisplayMap","KEY","setRestaurant","get","getKey","handleClick","image_url","location","length","allowfullscreen","MyHomeContainer","shouldDisplayNewPostForm","shouldDisplayNewPicForm","buttonText","profileImage","bio","homeGridStyleWithRestaurant","display","gridTemplateColumns","defaultHomeGridStyle","setPosts","filter","delete","getUserInfo","changeProfilePic","put","changeBio","submitPost","newPost","handleProfileImageChange","handleDisplayPostForm","handleDisplayPicForm","handleFormPost","handlePicChange","handleBioChange","prevProps","placeholder","withRouter","exact","path","component","render","match","params","App","localStorage","getItem","userId","setItem","handleLogout","removeItem","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30becbf2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\n\nconst Nav = ({ logout, currentUser }) => {\n    return (\n        <nav>\n            <Link to={currentUser ? \"/my_home\" : \"/\"}>\n                <h1 className=\"nav-header\">FoodEnvy</h1>\n            </Link>\n            <ul className=\"nav-links\">\n                {currentUser\n                    ? <>\n                        <Link to=\"/my_home\">\n                            <li>Profile</li>\n                        </Link>\n                        <li style={{ cursor: 'pointer' }} onClick={logout}>Logout</li>\n                    </>\n                    : <>\n                        <Link to=\"/login\">\n                            <li>Log In</li>\n                        </Link>\n                        <Link to=\"/\">\n                            <li>Register</li>\n                        </Link>\n                    </>\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default Nav;","import React from 'react';\n\nconst Register = ({ handleChange, handleSubmit, formInfo }) => {\n    return (\n        <form className=\"register-form\">\n            <h5>Register</h5>\n            <label>Username</label>\n            <input name=\"username\" type=\"text\" onChange={handleChange} value={formInfo.username} />\n            <label>Email</label>\n            <input name=\"email\" type=\"text\" onChange={handleChange} value={formInfo.email} />\n            <label>Password</label>\n            <input name=\"password\" type=\"password\" onChange={handleChange} value={formInfo.password} />\n            <label>Confirm Password</label>\n            <input name=\"password2\" type=\"password\" onChange={handleChange} value={formInfo.password2} />\n            <button onClick={handleSubmit} >Register</button>\n            <p>Come join our ever growing community of foodies. Be the envy of your friends' appetites</p>\n        </form>\n    );\n};\n\nexport default Register;\n","export const API_URL = 'https://secret-bastion-74960.herokuapp.com/api/v1/';","import React, { Component } from 'react';\nimport { API_URL } from '../../constants/constants';\nimport axios from 'axios';\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const userInfo = this.state;\n        axios.post(`${API_URL}auth/login`, userInfo, { withCredentials: true })\n            .then(response => {\n                this.props.setCurrentUser(response.data.id);\n                this.props.history.push('/my_home');\n            })\n            .catch(error => {\n                console.log(error.response);\n            });\n    };\n\n    render() {\n        return (\n            <form className=\"register-form\">\n                <h5>Log In</h5>\n                <label>Email</label>\n                <input name=\"email\" type=\"text\" onChange={this.handleChange} value={this.state.email} />\n                <label>Password</label>\n                <input name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password} />\n                <button onClick={this.handleSubmit} >Log In</button>\n            </form>\n        );\n    };\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n// internal components\nimport Register from '../Auth/Register';\nimport Login from '../Auth/Login';\nimport { API_URL } from '../../constants/constants';\nimport './Home.css';\n\nclass Home extends Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        password2: ''\n    };\n\n    registerUser = () => {\n        const newUser = this.state;\n        axios.post(`${API_URL}auth/register`, newUser)\n            .then(response => {\n                this.props.history.push('/login');\n            })\n            .catch(error => {\n                console.log(error.response);\n            });\n    };\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.registerUser();\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"home\">\n                <div className=\"home-image\">\n                    <img src=\"https://static8.depositphotos.com/1273864/887/i/950/depositphotos_8878936-stock-photo-greek-salad-gourmet-food-white.jpg\" alt=\"fruit salad\" />\n                </div>\n\n                {this.props.login\n                    ? <Login history={this.props.history} currentUser={this.props.currentUser} setCurrentUser={this.props.setCurrentUser} />\n                    : <Register handleSubmit={this.handleSubmit} handleChange={this.handleChange} formInfo={this.state} />\n                }\n            </div>\n        );\n    }\n\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Post.css';\n\nconst Post = ({ deletePost, restaurantName, image, time, description, slug, id, user }) => {\n    return (\n        <div className=\"post-card\" >\n            <div className=\"post-header\">\n                {user &&\n                    <div className=\"post-author-info\">\n                        <img src={user.profile_image} alt={`${user.username} profile`} />\n                        <div>\n                            <Link to={`/profile/${user._id}`} ><h3>@{user.username}</h3></Link>\n                            <Link to={`/restaurant/${slug}`}> <p> {restaurantName} </p> </Link>\n                        </div>\n\n                    </div>\n                }\n                <p style={{ cursor: 'pointer' }} onClick={() => deletePost(id)}>x</p>\n            </div>\n            <div className=\"image-container\">\n                <img src={image} alt=\"post\" />\n            </div>\n\n            <p> {description}</p>\n            <p>Posted at: {new Date(time).toLocaleDateString()}</p>\n        </div>\n    );\n};\n\nexport default Post;\n","import React, { Component } from 'react';\n// internal component\nimport Post from './Post/Post';\n\nimport './Posts.css';\n\nclass Posts extends Component {\n    displayPosts = () => {\n        return this.props.posts.map((post, i) => {\n            return (\n                <Post\n                    key={i}\n                    id={post._id}\n                    restaurantName={post.restaurant_name}\n                    image={post.image}\n                    time={post.time_posted}\n                    description={post.description}\n                    slug={post.restaurant_slug}\n                    deletePost={this.props.deletePost}\n                    user={post.user_id}\n                />\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"posts\">\n                {this.displayPosts()}\n            </div>\n        );\n    }\n};\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Post from '../Posts/Post/Post';\n\nimport { API_URL } from '../../constants/constants';\n\nimport './Restaurants.css';\n\nclass Restaurants extends Component {\n    state = {\n        restaurant: {},\n        posts: [],\n        shouldDisplayMap: false,\n        KEY: ''\n    };\n\n    componentDidMount() {\n        this.setRestaurant()\n        this.getKey();\n    };\n\n    setRestaurant = () => {\n        axios.get(`${API_URL}restaurants/${this.props.name}`)\n            .then(response => {\n                this.setState({\n                    restaurant: response.data.data,\n                    posts: response.data.data.posts\n                })\n            })\n            .catch(error => console.log(error));\n    };\n\n    getKey = () => {\n        axios.get(`${API_URL}maps`)\n            .then(response => this.setState({ KEY: response.data.key }));\n    }\n\n    displayPosts = () => {\n        return this.state.posts.map((post, i) => {\n            return (\n                <Post\n                    key={i}\n                    id={post._id}\n                    restaurantName={post.restaurant_name}\n                    image={post.image}\n                    time={post.time_posted}\n                    description={post.description}\n                    slug={post.restaurant_slug}\n                    deletePost={this.props.deletePost}\n                    user={post.user_id}\n                />\n            );\n        });\n    };\n\n    handleClick = () => {\n        this.setState({ shouldDisplayMap: !this.state.shouldDisplayMap });\n    }\n\n    render() {\n        return (\n            <div className=\"restaurant\">\n                {this.state.restaurant && this.props.name &&\n                    <div className=\"restaurants\">\n                        {this.state.restaurant.name}\n                        <img className=\"restaurant-image\" src={this.state.restaurant.image_url}\n                            alt={`${this.state.restaurant.name} storefront`} />\n                        <p> {this.state.restaurant.location} </p>\n                        <button onClick={this.handleClick} >Show Location</button>\n                    </div>}\n                {!this.state.shouldDisplayMap && this.state.posts.length > 0\n                    ? this.displayPosts()\n                    : <div>\n                        <iframe\n                            className=\"map\"\n                            src={`https://www.google.com/maps/embed/v1/place?key=${this.state.KEY}\n                                &q=${this.state.restaurant.location}`} allowfullscreen>\n                        </iframe>\n                    </div>}\n            </div>\n        );\n    };\n};\n\nexport default Restaurants;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n// internal components\nimport Posts from '../../components/Posts/Posts';\nimport Restaurants from '../../components/Restaurants/Restaurants';\nimport { API_URL } from '../../constants/constants';\nimport './MyHomeContainer.css';\n\nclass MyHomeContainer extends Component {\n    state = {\n        shouldDisplayNewPostForm: false,\n        shouldDisplayNewPicForm: false,\n        user: {},\n        buttonText: 'New Post',\n        image: '',\n        description: '',\n        restaurant_name: '',\n        user_id: this.props.currentUser,\n        restaurant_slug: '',\n        profileImage: '',\n        bio: '',\n        posts: [],\n        homeGridStyleWithRestaurant: {\n            display: 'grid',\n            gridTemplateColumns: '25% 40% 45%',\n        },\n        defaultHomeGridStyle: {\n            display: 'grid',\n            gridTemplateColumns: '40% 60%',\n        }\n    };\n\n    componentDidMount() {\n        console.log(this.props.user);\n        if (this.state.user) {\n            console.log(true)\n            this.getUserInfo(this.props.user);\n            this.setPosts(this.props.user);\n        } else {\n            this.getUserInfo(this.props.currentUser);\n            this.setPosts(this.props.currentUser);\n        };\n    };\n\n    componentWillReceiveProps(prevProps) {\n        console.log(prevProps)\n        if (prevProps.user) {\n            this.getUserInfo(prevProps.user);\n            this.setPosts(prevProps.user);\n        } else {\n            this.getUserInfo(prevProps.currentUser);\n            this.setPosts(prevProps.currentUser);\n        };\n    };\n\n    setPosts = (user) => {\n        console.log(user);\n        axios.get(`${API_URL}users/${user}`)\n            .then(response => this.setState({ posts: response.data.data.posts }))\n            .catch(error => console.log(error));\n    };\n\n    deletePost = (id) => {\n        this.setState({ posts: this.state.posts.filter(post => post._id !== id) })\n        axios.delete(`${API_URL}posts/${id}`)\n            .then()\n            .catch();\n    };\n\n    getUserInfo = (user) => {\n        console.log(user);\n        axios.get(`${API_URL}users/${user}`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    user: response.data.data,\n                    bio: response.data.data.bio,\n                    posts: response.data.data.posts,\n                    profileImage: response.data.data.profile_image\n                });\n            })\n            .catch(error => console.log(error));\n    };\n\n    changeProfilePic = () => {\n        axios.put(`${API_URL}users/${this.state.user._id}`, { profile_image: this.state.profileImage })\n            .then(response => console.log(response.data.data.profile_image))\n            .catch(error => console.log(error));\n    };\n\n    changeBio = () => {\n        axios.put(`${API_URL}users/${this.state.user._id}`, { bio: this.state.bio })\n            .then(response => console.log(response.data.data.bio))\n            .catch(error => console.log(error));\n    };\n\n    submitPost = () => {\n        const newPost = {\n            image: this.state.image,\n            description: this.state.description,\n            restaurant_name: this.state.restaurant_name,\n            user_id: this.props.currentUser,\n            restaurant_slug: this.state.restaurant_slug\n        };\n\n        this.setState({\n            posts: [...this.state.posts, newPost],\n            shouldDisplayNewPostForm: false,\n            image: '',\n            description: '',\n            restaurantName: '',\n        });\n        axios.post(`${API_URL}posts`, newPost)\n            .then()\n            .catch();\n    };\n\n    handleProfileImageChange = (event) => {\n        this.setState({ profileImage: event.target.value });\n    };\n\n    handleDisplayPostForm = () => {\n        this.setState({ shouldDisplayNewPostForm: !this.state.shouldDisplayNewPostForm });\n    };\n    handleDisplayPicForm = () => {\n        this.setState({ shouldDisplayNewPicForm: !this.state.shouldDisplayNewPicForm });\n    };\n\n    handleFormPost = (event) => {\n        event.preventDefault();\n        this.submitPost();\n    };\n\n    handlePicChange = (event) => {\n        event.preventDefault();\n        this.changeProfilePic();\n    };\n\n    handleBioChange = (event) => {\n        event.preventDefault();\n        this.changeBio();\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    render() {\n        return (\n            <div className=\"my-home\"\n                style={this.props.restaurantName ? this.state.homeGridStyleWithRestaurant : this.state.defaultHomeGridStyle}>\n                <div className=\"profile\">\n                    <div className=\"profile-header\">\n                        <div className=\"image-container\">\n                            <i style={{ cursor: 'pointer' }} onClick={this.handleDisplayPicForm} className=\"far fa-edit\"></i>\n                            <img src={this.state.profileImage} alt={`${this.state.user.username}'s profile`} />\n                        </div>\n                        <div className=\"user-info\">\n                            <strong><p>@{this.state.user.username}</p></strong>\n                            <p>{this.state.user.name}</p>\n                        </div>\n                    </div>\n\n                    {this.state.shouldDisplayNewPicForm &&\n                        <div className=\"new-pic\">\n                            <label>New Pic Url</label>\n                            <input onChange={this.handleProfileImageChange} />\n                            <button onClick={this.handlePicChange} >Submit</button>\n                        </div>\n                    }\n                    <div >\n                        <strong>Bio:</strong>\n                        {this.state.shouldDisplayNewPicForm\n                            ? <div>\n                                <input name=\"bio\" onChange={this.handleChange} />\n                                <button>Submit</button>\n                            </div>\n                            : <p className=\"bio\"> {this.state.bio} </p>}\n                    </div>\n                    <button onClick={this.handleDisplayPostForm} >{this.state.buttonText}</button>\n\n                    {this.state.shouldDisplayNewPostForm &&\n                        <form className=\"new-post-form profile-form\">\n                            <h5>New Post</h5>\n                            <label>Restaurant Name</label>\n                            <input type=\"text\" placeholder=\"Where did you go?\" name=\"restaurant_name\" value={this.state.restaurant_name} onChange={this.handleChange} />\n                            <label>Description</label>\n                            <input type=\"text\" placeholder=\"yummy food\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                            <label>Image Url</label>\n                            <input name=\"image\" value={this.state.image} onChange={this.handleChange} />\n                            <select name=\"restaurant_slug\" onChange={this.handleChange} value={this.state.restaurant_slug}>\n                                <option>\n                                    Select Restaurant\n                                </option>\n                                <option value=\"valla-sf\">Taqueria Vallarta</option>\n                                <option value=\"gordatorta\">La Torta Gorda</option>\n                            </select>\n                            <button onClick={this.handleFormPost}>Post</button>\n                        </form>\n                    }\n                </div>\n                <Posts posts={this.state.posts} currentUser={this.props.currentUser} deletePost={this.deletePost} />\n                {this.props.restaurantName && <Restaurants name={this.props.restaurantName} deletePost={this.deletePost} />}\n            </div>\n        );\n    };\n};\n\nexport default MyHomeContainer;\n","import React from 'react';\nimport { withRouter, Switch, Route } from 'react-router-dom';\nimport Home from '../components/Home/Home';\nimport Register from '../components/Auth/Register';\nimport MyHomeContainer from '../containers/MyHomeContainer/MyHomeContainer';\n\nconst Routes = ({ currentUser, setCurrentUser }) => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\"\n                render={(props) => <Home {...props} login='login' setCurrentUser={setCurrentUser} currentUser={currentUser} />} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/my_home\"\n                render={(props) => <MyHomeContainer {...props} currentUser={currentUser} />} />\n            <Route path=\"/restaurant/:restaurant_name\"\n                render={(props) => <MyHomeContainer {...props} currentUser={currentUser} restaurantName={props.match.params.restaurant_name} />} />\n            <Route path=\"/profile/:user\" render={(props) => <MyHomeContainer {...props} user={props.match.params.user} />} />\n        </Switch>\n    )\n}\n\nexport default withRouter(Routes);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n// internal components\nimport Nav from './components/Nav/Nav';\nimport Routes from './config/Routes';\nimport { API_URL } from './constants/constants';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    currentUser: localStorage.getItem('uid'),\n  };\n\n  setCurrentUser = (userId) => {\n    localStorage.setItem('uid', userId)\n    this.setState({ currentUser: userId });\n  };\n\n  handleLogout = () => {\n    localStorage.removeItem('uid');\n    axios.post(`${API_URL}auth/logout`, { withCredentials: true })\n      .then(() => {\n        this.setState({ currentUser: null });\n        this.props.history.push('/login');\n      })\n      .catch(error => console.log(error.response));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav logout={this.handleLogout} currentUser={this.state.currentUser} />\n        <Routes setCurrentUser={this.setCurrentUser} currentUser={this.state.currentUser} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}